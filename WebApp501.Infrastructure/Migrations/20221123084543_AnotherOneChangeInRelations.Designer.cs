// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp501.Infrastructure.Data;

#nullable disable

namespace WebApp501.Infrastructure.Migrations
{
    [DbContext(typeof(WebAppDbContext))]
    [Migration("20221123084543_AnotherOneChangeInRelations")]
    partial class AnotherOneChangeInRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CocktailImage", b =>
                {
                    b.Property<int>("CocktailsId")
                        .HasColumnType("int");

                    b.Property<int>("ImagesId")
                        .HasColumnType("int");

                    b.HasKey("CocktailsId", "ImagesId");

                    b.HasIndex("ImagesId");

                    b.ToTable("CocktailImage");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "726719c4-8995-4426-9c00-1cb0831621d4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0d07fc87-a27e-44c2-8ada-bf29e34b8c2a",
                            Email = "dbyalkov@abv.bg",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DBYALKOV@ABV.BG",
                            NormalizedUserName = "DBYALKOV",
                            PasswordHash = "AQAAAAEAACcQAAAAEOK9n8iRbXbXO7hLXdmEB01oBqiSAqp4YjZCr/bGi8g1lKxR8UKUUcJGRL46EGtduQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e0abcf47-d160-4a8e-a92e-2231797291b9",
                            TwoFactorEnabled = false,
                            UserName = "dbyalkov"
                        },
                        new
                        {
                            Id = "30342ffd-ffd8-4e66-9348-da6a2068856e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b65948ef-f9e8-4066-a246-8625da62bbdd",
                            Email = "doomar@abv.bg",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DOOMAR@ABV.BG",
                            NormalizedUserName = "D00M3R",
                            PasswordHash = "AQAAAAEAACcQAAAAEEMjG+eRQ84YgVdCrNyxnTRgwhyXcbIyG3UpRQ2OBbOvr38eC4ZaqAJN7TVtTpbxHw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d1a7987e-1596-4ed5-8078-455bab8ba74c",
                            TwoFactorEnabled = false,
                            UserName = "d00m3r"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.Bartender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bartenders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 28,
                            FirstName = "Dimitar",
                            IsDeleted = false,
                            LastName = "Byalkov",
                            UserId = "726719c4-8995-4426-9c00-1cb0831621d4"
                        });
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.Cocktail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlcoholId")
                        .HasColumnType("int");

                    b.Property<int>("BartenderId")
                        .HasColumnType("int");

                    b.Property<int?>("GlassId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Preparation")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AlcoholId");

                    b.HasIndex("BartenderId");

                    b.HasIndex("GlassId");

                    b.ToTable("Cocktails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlcoholId = 1,
                            BartenderId = 1,
                            GlassId = 1,
                            IsDeleted = false,
                            Name = "Gauguin",
                            Preparation = "Place the crushed ice, rum, syrup and lemon juice in a blender and blend on low speed for 15 seconds. Strain the resulting mixture into an old fashioned glass and garnish with the cocktail cherry.",
                            Recipe = "3 parts crushed ice\r\n2 parts white rum\r\n2 tsp passion fruit syrup\r\n2 tsp lemon juice\r\n1 tsp lime juice\r\n1 cocktail cherry for decoration"
                        },
                        new
                        {
                            Id = 2,
                            AlcoholId = 2,
                            BartenderId = 1,
                            GlassId = 20,
                            IsDeleted = false,
                            Name = "Toulon",
                            Preparation = "Place the ice cubes in a serving glass and pour the vermouth, liqueur and brandy over them and stir vigorously. Strain the resulting mixture into a chilled cocktail glass and garnish with the orange peel.",
                            Recipe = "4-5 ice cubes\r\n1 part dry vermouth\r\n1 part Benedictine liqueur\r\n3 parts brandy\r\na strip of orange peel for decoration"
                        },
                        new
                        {
                            Id = 3,
                            AlcoholId = 3,
                            BartenderId = 1,
                            GlassId = 4,
                            IsDeleted = false,
                            Name = "Sweet Sixteen",
                            Preparation = "Place half the ice cubes in a shaker, pour over the gin, lime juice, grenadine and sugar syrup and shake until frosty. Put the remaining ice in a tall glass, strain the resulting mixture over the ice and top up the glass with lemon bitters. Finally, garnish with the lemon peel.",
                            Recipe = "6-8 ice cubes\r\n2 parts gin\r\njuice of half a green lemon\r\n2 dashes of grenadine\r\n1 tsp sugar syrup\r\nlemon bitters\r\nlemon zest for garnish"
                        },
                        new
                        {
                            Id = 4,
                            AlcoholId = 4,
                            BartenderId = 1,
                            GlassId = 4,
                            IsDeleted = false,
                            Name = "Sex on the Beach",
                            Preparation = "Add a few ice cubes to the shaker along with the vodka, schnapps, cranberry juice, orange juice and pineapple juice (if desired) and shake well. Put 3-4 ice cubes in a tall glass and pour the resulting mixture over them. Finally, garnish the drink with the green lemon slices and the orange slices and serve the cocktail with a straw.",
                            Recipe = "ice cubes\r\n1 part vodka\r\n1 part peach schnapps\r\n1 part cranberry juice\r\n1 part orange juice\r\n1 part pineapple juice (optional)\r\norange slices for decoration\r\nslices of green lemon for decoration"
                        },
                        new
                        {
                            Id = 5,
                            AlcoholId = 5,
                            BartenderId = 1,
                            GlassId = 1,
                            IsDeleted = false,
                            Name = "Rhett Butler",
                            Preparation = "Place the ice cubes in a shaker along with the bourbon, cranberry juice, sugar syrup and lime juice and shake well. Strain the resulting mixture into an old fashioned glass filled with ice cubes, garnish with a lemon wedge and serve with a short straw.",
                            Recipe = "4-5 ice cubes and extra for serving\r\n2 parts bourbon whiskey\r\n4 parts cranberry juice\r\n2 tbsp sugar syrup\r\n1 tbsp fresh lemon juice\r\na slice of green lemon for garnish"
                        },
                        new
                        {
                            Id = 6,
                            AlcoholId = 6,
                            BartenderId = 1,
                            GlassId = 18,
                            IsDeleted = false,
                            Name = "Cheshire Cat",
                            Preparation = "Put the ice cubes in a serving glass, pour over them the brandy, vermouth and orange juice and stir until a homogeneous mixture is obtained. Strain the resulting mixture into a tall champagne glass and top up with champagne. Squeeze the essential oil from one orange peel into the drink and garnish with a spiral orange peel.",
                            Recipe = "4-5 ice cubes\r\n1 part brandy\r\n1 part sweet vermouth\r\nchampagne\r\norange peels for garnish"
                        },
                        new
                        {
                            Id = 7,
                            AlcoholId = 7,
                            BartenderId = 1,
                            GlassId = 4,
                            IsDeleted = false,
                            Name = "Mexicana",
                            Preparation = "Place half of the ice cubes in a shaker along with the tequila, raspberry liqueur and fruit juices and shake vigorously for about 10 seconds. Put the remaining ice cubes in a tall glass and pour the resulting mixture over them. Finally, garnish the drink with the pineapple and lemon slice.",
                            Recipe = "8-10 ice cubes\r\n1 1/4 parts tequila\r\n3/4 part raspberry liqueur\r\n3/4 part fresh lemon juice\r\n3 1/2 parts pineapple juice\r\npineapple slice for garnish\r\nlemon slice for garnish"
                        },
                        new
                        {
                            Id = 8,
                            AlcoholId = 8,
                            BartenderId = 1,
                            GlassId = 37,
                            IsDeleted = false,
                            Name = "Slippery Nipple",
                            Preparation = "Pour the Sambuca liqueur into a tequila (shot) glass, then using the back of a bar spoon, slowly pour the Irish liqueur over the Sambuca so that the two liqueurs do not mix.",
                            Recipe = "1 part \"Sambuca\" liqueur\r\n1/2 part Baileys Irish Liqueur"
                        },
                        new
                        {
                            Id = 9,
                            AlcoholId = 9,
                            BartenderId = 1,
                            GlassId = 20,
                            IsDeleted = false,
                            Name = "Bitter Sweet",
                            Preparation = "Put the crushed ice in a shaker, pour on it 2 tbsp of the sparkling water and bitters, add the mint leaves and mix until frost forms. Pour the resulting mixture into a chilled glass, fill it with sparkling water and decorate the drink with slices of green or yellow lemon.",
                            Recipe = "crushed ice\r\n150 ml sparkling water\r\n2 dashes \"Angostura\" bitters\r\n6-8 mint leaves\r\ngreen or yellow lemon circles for decoration"
                        });
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.Glass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Glasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://www.google.com/search?q=Old+Fashioned+Glass&bih=937&biw=1920&hl=en&sxsrf=ALiCzsZksVXX7Jp6cFoRTLguZ9_rFgP01w%3A1668593623124&ei=17d0Y6CXB4XAxc8P5qePoA0&ved=0ahUKEwjg3rjRu7L7AhUFYPEDHebTA9QQ4dUDCA8&uact=5&oq=Old+Fashioned+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECCMQJzIECAAQQzIFCAAQgAQyCggAEIAEEIcCEBQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgARKBAhBGABKBAhGGABQAFgAYN0DaABwAXgAgAFniAFnkgEDMC4xmAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Old Fashioned Glass"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://www.google.com/search?q=Rocks+Glass&source=lmns&bih=937&biw=1920&hl=en&sa=X&ved=2ahUKEwjDgsTMu7L7AhUzhP0HHSXuDhEQ_AUoAHoECAEQAA",
                            IsDeleted = false,
                            Name = "Rocks Glass"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://www.google.com/search?q=Cosmopolitan+Glass&hl=en&sxsrf=ALiCzsakKsEMVyRGZAk7S8Zs_2iykuym5A%3A1668593676149&ei=DLh0Y5XRCJSGxc8PxOKX2AY&ved=0ahUKEwiVh93qu7L7AhUUQ_EDHUTxBWsQ4dUDCA8&uact=5&oq=Cosmopolitan+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgoIABCABBCHAhAUMgUIABCABDIFCAAQgAQyBQgAEIAESgQIQRgASgQIRhgAUABYAGDSAWgAcAF4AIABdIgBdJIBAzAuMZgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Cosmopolitan Glass"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://www.google.com/search?q=Highball+Glass&hl=en&sxsrf=ALiCzsZF3422_khQfxrWIHjSUWIgy0Ot0A%3A1668593702256&ei=Jrh0Y9aVD-2Sxc8P7-yOqA4&ved=0ahUKEwjWwJb3u7L7AhVtSfEDHW-2A-UQ4dUDCA8&uact=5&oq=Highball+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIKCAAQgAQQhwIQFDIFCAAQgAQyBQgAEIAEMgoIABCABBCHAhAUMgUIABCRAjIFCAAQkQIyBQgAEIAEMgUIABCABDIFCAAQgARKBAhBGABKBAhGGABQAFgAYLsBaABwAXgAgAGEAYgBhAGSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Highball Glass"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://www.google.com/search?q=Collins+Glass&hl=en&sxsrf=ALiCzsacdfcPWofspFyJ4YW4-C9A0zbB_w%3A1668593720648&ei=OLh0Y6WKJ6yFxc8Phv296Aw&ved=0ahUKEwilhvn_u7L7AhWsQvEDHYZ-D80Q4dUDCA8&uact=5&oq=Collins+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIECAAQQzIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgQIABBDMgUIABCABDIFCAAQgARKBAhBGABKBAhGGABQAFgAYKkDaABwAXgAgAF5iAF5kgEDMC4xmAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Collins Glass"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://www.google.com/search?q=Zombie+Glass&hl=en&sxsrf=ALiCzsb9Onseh4wmGEC1WkKh5Vf-ZoEKuQ%3A1668593737947&ei=Sbh0Y4WvOfa_xc8PgKmUsA8&ved=0ahUKEwjF95iIvLL7AhX2X_EDHYAUBfYQ4dUDCA8&uact=5&oq=Zombie+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQA0oECEEYAEoECEYYAFAAWABg9gJoAHABeACAAQCIAQCSAQCYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Zombie Glass"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://www.google.com/search?q=Weizen+Glass&hl=en&sxsrf=ALiCzsZSN98V4C5ier_raFN6DNaXJ3rDiw%3A1668593801173&ei=ibh0Y8qQCqyNxc8PobqUEA&ved=0ahUKEwiK-aumvLL7AhWsRvEDHSEdBQIQ4dUDCA8&uact=5&oq=Weizen+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIFCAAQkQIyBQgAEIAEMgUIABCABDIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIICAAQFhAeEAoyBggAEBYQHjIGCAAQFhAeSgQIQRgASgQIRhgAUABYAGCnBGgAcAF4AIABeYgBeZIBAzAuMZgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Weizen Glass"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://www.google.com/search?q=Pilsner+Glass&hl=en&sxsrf=ALiCzsZO_TUrNQyiWYXd8YLg_RxexCkecg%3A1668593813987&ei=lbh0Y6PsO7erxc8P04mjgAc&ved=0ahUKEwjjirqsvLL7AhW3VfEDHdPECHAQ4dUDCA8&uact=5&oq=Pilsner+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIKCAAQgAQQhwIQFDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAESgQIQRgASgQIRhgAUABYAGCXAmgAcAB4AIABaIgBaJIBAzAuMZgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Pilsner Glass"
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "https://www.google.com/search?q=Sling+Glass&hl=en&sxsrf=ALiCzsYiTS2gLkSIaOBNIKHtqcHCYSA8Dw%3A1668593841539&ei=sbh0Y7rBIJaPxc8Pk7SzuAU&ved=0ahUKEwj63cu5vLL7AhWWR_EDHRPaDFcQ4dUDCA8&uact=5&oq=Sling+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIKCAAQgAQQhwIQFDIFCAAQgAQyBQgAEIAEMgcIABCABBAKMgUIABCABDIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeSgQIQRgASgQIRhgAUABYAGCUAWgAcAF4AIABhAGIAYQBkgEDMC4xmAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Sling Glass"
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "https://www.google.com/search?q=Pint+Glass&hl=en&sxsrf=ALiCzsaKQCMC6IZ87woS9FzjcIdn3LgX3g%3A1668593853854&ei=vbh0Y7HVM8WSxc8P6pioqAc&ved=0ahUKEwjxp7u_vLL7AhVFSfEDHWoMCnUQ4dUDCA8&uact=5&oq=Pint+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQA0oECEEYAEoECEYYAFAAWABgdGgAcAF4AIABAIgBAJIBAJgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Pint Glass"
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "https://www.google.com/search?q=Beer+Mug&hl=en&sxsrf=ALiCzsZXZ5ODI_ByrlwseAtObG8aAzXhAw%3A1668593867431&ei=y7h0Y6bxGZ6rxc8Pgoa-4Ao&ved=0ahUKEwjmgvjFvLL7AhWeVfEDHQKDD6wQ4dUDCA8&uact=5&oq=Beer+Mug&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIKCAAQgAQQhwIQFDIKCAAQgAQQhwIQFDIECAAQQzIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABEoECEEYAEoECEYYAFAAWABgnAFoAHABeACAAW-IAW-SAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Beer Mug"
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "https://www.google.com/search?q=Irish+Coffee+Glass&hl=en&sxsrf=ALiCzsbHsswfqUjLnQcq4wB2AKgCa7fI0A%3A1668593882299&ei=2rh0Y4jfEe6Xxc8PyLGe4AU&ved=0ahUKEwiItIPNvLL7AhXuS_EDHciYB1wQ4dUDCA8&uact=5&oq=Irish+Coffee+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABEoECEEYAEoECEYYAFAAWABgiAdoAHAAeACAAXGIAXGSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Irish Coffee Glass"
                        },
                        new
                        {
                            Id = 13,
                            ImageUrl = "https://www.google.com/search?q=Red+Wine+Glass&hl=en&sxsrf=ALiCzsaTXw7Grstwjekn_pBLB9igMnC0eQ%3A1668594006964&ei=Vrl0Y8K-Or6Bxc8PwvOQMA&ved=0ahUKEwjCwbyIvbL7AhW-QPEDHcI5BAYQ4dUDCA8&uact=5&oq=Red+Wine+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQA0oECEEYAEoECEYYAFAAWABgvAFoAHABeACAAQCIAQCSAQCYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Red Wine Glass"
                        },
                        new
                        {
                            Id = 14,
                            ImageUrl = "https://www.google.com/search?q=White+Wine+Glass&hl=en&sxsrf=ALiCzsb16F7oUzTE9Aac5Jxh1gYUPC1dAA%3A1668594033206&ei=cbl0Y-iNDKaNxc8PsYO6-Ac&ved=0ahUKEwioiv6UvbL7AhWmRvEDHbGBDn8Q4dUDCA8&uact=5&oq=White+Wine+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIKCAAQgAQQhwIQFDIECAAQQzIFCAAQgAQyBQgAEIAEMgUIABCABDIECAAQQzIFCAAQgAQyBQgAEIAEMgUIABCABEoECEEYAEoECEYYAFAAWABgkARoAHABeACAAWWIAWWSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "White Wine Glass"
                        },
                        new
                        {
                            Id = 15,
                            ImageUrl = "https://www.google.com/search?q=Ballon+Wine+Glass&hl=en&sxsrf=ALiCzsbhDj1M1_XUz0bDO74I2ClBQnn36g%3A1668594047027&ei=f7l0Y5yhAdOFxc8P55G9oAQ&ved=0ahUKEwjc3MmbvbL7AhXTQvEDHedID0QQ4dUDCA8&uact=5&oq=Ballon+Wine+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIHCAAQgAQQCjIHCAAQgAQQCjIHCAAQgAQQCjIKCAAQFhAeEA8QCjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeMggIABAWEB4QD0oECEEYAEoECEYYAFAAWABgxgFoAHABeACAAWqIAWqSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Ballon Wine Glass"
                        },
                        new
                        {
                            Id = 16,
                            ImageUrl = "https://www.google.com/search?q=Wine+Tasting+Glass&hl=en&sxsrf=ALiCzsZFP7s2lnzXNi1TvQsnJuk2qHdkSg%3A1668594062150&ei=jrl0Y5DOCLqSxc8P0LC2iAQ&ved=0ahUKEwiQzeSivbL7AhU6SfEDHVCYDUEQ4dUDCA8&uact=5&oq=Wine+Tasting+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQgAQyBQgAEIAEMgUIABCABDIKCAAQgAQQhwIQFDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABEoECEEYAEoECEYYAFAAWABgzwFoAHABeACAAXKIAXKSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Wine Tasting Glass"
                        },
                        new
                        {
                            Id = 17,
                            ImageUrl = "https://www.google.com/search?q=Sherry+Glass&hl=en&sxsrf=ALiCzsYBV8A6U6VwCHJlEyArnXD4QkyIUg%3A1668594074204&ei=mrl0Y_mDDLGFxc8PoZ2n-AY&ved=0ahUKEwj5uMSovbL7AhWxQvEDHaHOCW8Q4dUDCA8&uact=5&oq=Sherry+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQkQIyBQgAEIAEMggILhCABBDUAjIFCAAQgAQyBQgAEJECMgUIABCABDIFCAAQkQIyBQgAEIAEMgUIABCABDIFCAAQgARKBAhBGABKBAhGGABQAFgAYL0FaABwAXgAgAGcAYgBnAGSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Sherry Glass"
                        },
                        new
                        {
                            Id = 18,
                            ImageUrl = "https://www.google.com/search?q=Champagne+Flute&hl=en&sxsrf=ALiCzsb-4DbDXUgk-c2RAK3lWdL3iuf5ZA%3A1668594132088&ei=1Ll0Y-H1BImQxc8PwNuHmA4&ved=0ahUKEwjhr5HEvbL7AhUJSPEDHcDtAeMQ4dUDCA8&uact=5&oq=Champagne+Flute&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQA0oECEEYAEoECEYYAFAAWABg9wFoAHABeACAAQCIAQCSAQCYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Champagne Flute"
                        },
                        new
                        {
                            Id = 19,
                            ImageUrl = "https://www.google.com/search?q=Champagne+Coupe&hl=en&sxsrf=ALiCzsYSG73k8M9dBqZBv5NqfKRx4k0jOQ%3A1668594196658&ei=FLp0Y8XmJ8eMxc8Pjd6h0AE&ved=0ahUKEwjFwPbivbL7AhVHRvEDHQ1vCBoQ4dUDCA8&uact=5&oq=Champagne+Coupe&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQA0oECEEYAEoECEYYAFAAWABg9gFoAHABeACAAQCIAQCSAQCYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Champagne Coupe"
                        },
                        new
                        {
                            Id = 20,
                            ImageUrl = "https://www.google.com/search?q=Martini+Glass&hl=en&sxsrf=ALiCzsb7E6XWloUcn718PYvWpMoXoxeVcQ%3A1668594864123&ei=sLx0Y66IB5W9xc8PuOmuyAs&ved=0ahUKEwiuoJmhwLL7AhWVXvEDHbi0C7kQ4dUDCA8&uact=5&oq=Martini+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQkQIyBQgAEJECMgUIABCRAjIFCAAQkQIyBQgAEIAEMgoIABCABBCHAhAUMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABEoECEEYAEoECEYYAFAAWABgnwdoAHAAeACAAXmIAXmSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Martini Glass"
                        },
                        new
                        {
                            Id = 21,
                            ImageUrl = "https://www.google.com/search?q=Margarita+Glass&hl=en&sxsrf=ALiCzsbD_7BOlu3uAGcVqV1qFsTP0wPiKA%3A1668594946758&ei=Ar10Y8vhLfC7xc8PleSNkAc&ved=0ahUKEwjL6szIwLL7AhXwXfEDHRVyA3IQ4dUDCA8&uact=5&oq=Margarita+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIICAAQgAQQywEyBAgAEEMyCggAEIAEEIcCEBQyBQgAEIAEMgQIABBDMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgARKBAhBGABKBAhGGABQAFgAYL4CaABwAXgAgAFyiAFykgEDMC4xmAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Margarita Glass"
                        },
                        new
                        {
                            Id = 22,
                            ImageUrl = "https://www.google.com/search?q=Goblet+Glass&hl=en&sxsrf=ALiCzsbAZ61wMs1ecdMo5PV88PgKq4aZUw%3A1668594974987&ei=Hr10Y5PwO6eTxc8Pl-SJmAE&ved=0ahUKEwiT94fWwLL7AhWnSfEDHRdyAhMQ4dUDCA8&uact=5&oq=Goblet+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIFCAAQgAQyCggAEIAEEIcCEBQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAESgQIQRgASgQIRhgAUABYAGDhAWgAcAF4AIABa4gBa5IBAzAuMZgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Goblet Glass"
                        },
                        new
                        {
                            Id = 23,
                            ImageUrl = "https://www.google.com/search?q=Pokal+Glass&hl=en&sxsrf=ALiCzsa42LZ4PfpjzGaXj04rJXc-UOJahQ%3A1668594988929&ei=LL10Y6CbOKKTxc8Pn4Kx2A8&ved=0ahUKEwig4drcwLL7AhWiSfEDHR9BDPsQ4dUDCA8&uact=5&oq=Pokal+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQkQIyCggAEIAEEIcCEBQyBQgAEIAEMgUIABCRAjIFCAAQgAQyBggAEBYQHjIGCAAQFhAeMgUIABCGAzIFCAAQhgNKBAhBGABKBAhGGABQAFgAYIMDaABwAXgAgAGJAYgBiQGSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Pokal Glass"
                        },
                        new
                        {
                            Id = 24,
                            ImageUrl = "https://www.google.com/search?q=Milkshake+Glass&hl=en&sxsrf=ALiCzsaDvvzr8oRf7bGgCxlwz_JVLUWTXw%3A1668595001452&ei=Ob10Y7KBG6KSxc8PntGS-Ao&ved=0ahUKEwjygdfiwLL7AhUiSfEDHZ6oBK8Q4dUDCA8&uact=5&oq=Milkshake+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIFCAAQgAQyBAgAEEMyBQgAEIAEMgQIABBDMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgARKBAhBGABKBAhGGABQAFgAYPcBaABwAXgAgAFviAFvkgEDMC4xmAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Milkshake Glass"
                        },
                        new
                        {
                            Id = 25,
                            ImageUrl = "https://www.google.com/search?q=Hurricane+Glass&hl=en&sxsrf=ALiCzsZe3r32UGH96fybE7WwJCDhwaKuYg%3A1668595020212&ei=TL10Y4K9DPGtxc8P14-64Ag&ved=0ahUKEwiCk9DrwLL7AhXxVvEDHdeHDowQ4dUDCA8&uact=5&oq=Hurricane+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQkQIyCggAEIAEEIcCEBQyBQgAEJECMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABEoECEEYAEoECEYYAFAAWABgnAFoAHABeACAAX6IAX6SAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Hurricane Glass"
                        },
                        new
                        {
                            Id = 26,
                            ImageUrl = "https://www.google.com/search?q=Poco+Grande+Glass&hl=en&sxsrf=ALiCzsZxE3RSuuxxBVsQsqQE1mY4my4eZw%3A1668595032646&ei=WL10Y5mLJ5iExc8Px9CdsAM&ved=0ahUKEwiZl8fxwLL7AhUYQvEDHUdoBzYQ4dUDCA8&uact=5&oq=Poco+Grande+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgoIABCABBCHAhAUMgUIABCABEoECEEYAEoECEYYAFAAWABgqAFoAHABeACAAXyIAXySAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Poco Grande Glass"
                        },
                        new
                        {
                            Id = 27,
                            ImageUrl = "https://www.google.com/search?q=Brandy+Snifter&hl=en&sxsrf=ALiCzsZNNDANMOfWDi63gU8kEaLt6-aaxQ%3A1668595044186&ei=ZL10Y4SEC8CBxc8P-P6YaA&ved=0ahUKEwiExof3wLL7AhXAQPEDHXg_Bg0Q4dUDCA8&uact=5&oq=Brandy+Snifter&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIFCAAQgAQyCggAEIAEEIcCEBQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAESgQIQRgASgQIRhgAUABYAGCBCGgAcAF4AIABd4gBd5IBAzAuMZgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Brandy Snifter"
                        },
                        new
                        {
                            Id = 28,
                            ImageUrl = "https://www.google.com/search?q=Wobble+Cognac+Glass&hl=en&sxsrf=ALiCzsbslu4l-7YPDgEjnhxyUb01ghWZKQ%3A1668595057314&ei=cb10Y7TbEsi_xc8PxZ6IyAc&ved=0ahUKEwj016j9wLL7AhXIX_EDHUUPAnkQ4dUDCA8&uact=5&oq=Wobble+Cognac+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQgAQyBQgAEIYDMgUIABCGAzIFCAAQhgNKBAhBGABKBAhGGABQAFgAYLEBaABwAXgAgAF5iAF5kgEDMC4xmAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Wobble Cognac Glass"
                        },
                        new
                        {
                            Id = 29,
                            ImageUrl = "https://www.google.com/search?q=Tulip+Whisky+Glass&hl=en&sxsrf=ALiCzsZqjgEcBXhP0F74w6ukhSdjlan1yg%3A1668595068685&ei=fL10Y7mUKeKExc8P3oOtsAE&ved=0ahUKEwi5wt6CwbL7AhViQvEDHd5BCxYQ4dUDCA8&uact=5&oq=Tulip+Whisky+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQA0oECEEYAEoECEYYAFAAWABghgFoAHABeACAAQCIAQCSAQCYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Tulip Whisky Glass"
                        },
                        new
                        {
                            Id = 30,
                            ImageUrl = "https://www.google.com/search?q=Tulip+Glass&hl=en&sxsrf=ALiCzsY5AD5KJ64NlBoMbrgXc9nEVngljw%3A1668595084467&ei=jL10Y5iJHMaOxc8P16-VWA&ved=0ahUKEwiY_6GKwbL7AhVGR_EDHddXBQsQ4dUDCA8&uact=5&oq=Tulip+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIKCAAQgAQQhwIQFDIECAAQQzIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgARKBAhBGABKBAhGGABQAFgAYIgBaABwAXgAgAFyiAFykgEDMC4xmAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Tulip Glass"
                        },
                        new
                        {
                            Id = 31,
                            ImageUrl = "https://www.google.com/search?q=Grappa+Glass&hl=en&sxsrf=ALiCzsZEGOAmdlUCbrPSfHv79TXEN4XHBg%3A1668595098940&ei=mr10Y7b5OPiMxc8PoYedsA4&ved=0ahUKEwi2rpWRwbL7AhV4RvEDHaFDB-YQ4dUDCA8&uact=5&oq=Grappa+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIFCAAQgAQyCggAEIAEEIcCEBQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAESgQIQRgASgQIRhgAUABYAGCCA2gAcAF4AIABeIgBeJIBAzAuMZgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Grappa Glass"
                        },
                        new
                        {
                            Id = 32,
                            ImageUrl = "https://www.google.com/search?q=Pousse+Cafe+Glass&hl=en&sxsrf=ALiCzsayNpwTrWErAORtXInTKGmPiEmgcw%3A1668595113445&ei=qb10Y5rbGv66xc8Pu4Gz-As&ved=0ahUKEwja04qYwbL7AhV-XfEDHbvADL8Q4dUDCA8&uact=5&oq=Pousse+Cafe+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQgAQyBggAEBYQHjIFCAAQhgMyBQgAEIYDMgUIABCGAzIFCAAQhgNKBAhBGABKBAhGGABQAFgAYNsCaABwAXgAgAGAAYgBgAGSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Pousse Cafe Glass"
                        },
                        new
                        {
                            Id = 33,
                            ImageUrl = "https://www.google.com/search?q=Cordial+Glass&hl=en&sxsrf=ALiCzsYgPJPMIWXBzryN9c8CkrFt_UFWoQ%3A1668595125086&ei=tb10Y5rnBPWBxc8PjcGv-Ag&ved=0ahUKEwjaldGdwbL7AhX1QPEDHY3gC48Q4dUDCA8&uact=5&oq=Cordial+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQA0oECEEYAEoECEYYAFAAWABgfmgAcAB4AIABAIgBAJIBAJgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Cordial Glass"
                        },
                        new
                        {
                            Id = 34,
                            ImageUrl = "https://www.google.com/search?q=Absinthe+Glass&hl=en&sxsrf=ALiCzsb1qF2QVishHqOISrTAq8krWmY2fA%3A1668595137676&ei=wb10Y7z0KN2Uxc8P8fW1sAg&ved=0ahUKEwj82NGjwbL7AhVdSvEDHfF6DYYQ4dUDCA8&uact=5&oq=Absinthe+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIECAAQQzIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyCggAEIAEEIcCEBQyBQgAEIAEMgQIABBDMgUIABCABEoECEEYAEoECEYYAFAAWABgjgFoAHABeACAAXOIAXOSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Absinthe Glass"
                        },
                        new
                        {
                            Id = 35,
                            ImageUrl = "https://www.google.com/search?q=Vodka+Glass&hl=en&sxsrf=ALiCzsYxVsK6UlZJvje9KDHv5qfRj3SdKg%3A1668595147610&ei=y710Y6DfJJG-xc8PxZGI2AY&ved=0ahUKEwjg8K-owbL7AhURX_EDHcUIAmsQ4dUDCA8&uact=5&oq=Vodka+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIFCAAQkQIyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABEoECEEYAEoECEYYAFAAWABgtANoAHABeACAAXqIAXqSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Vodka Glass"
                        },
                        new
                        {
                            Id = 36,
                            ImageUrl = "https://www.google.com/search?q=Shooter+Glass&hl=en&sxsrf=ALiCzsYCiHwVGHnonR3h9IiOti6KcMT2oA%3A1668595161113&ei=2b10Y5S_BoCPxc8Puem40Ak&ved=0ahUKEwjUj-iuwbL7AhWAR_EDHbk0DpoQ4dUDCA8&uact=5&oq=Shooter+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCAAQgAQQhwIQFDIKCAAQgAQQhwIQFDIFCAAQgAQyBQgAEIAEMgUIABCABDIHCAAQgAQQCjIFCAAQgAQyBwgAEIAEEAoyBQgAEIAEMgUIABCABEoECEEYAEoECEYYAFAAWABgsQFoAHABeACAAXuIAXuSAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Shooter Glass"
                        },
                        new
                        {
                            Id = 37,
                            ImageUrl = "https://www.google.com/search?q=Shot+Glass&hl=en&sxsrf=ALiCzsaicIYZvf42TLqqcQM_w1awx-68Hg%3A1668595172668&ei=5L10Y4mvKMiMxc8P7aKomAc&ved=0ahUKEwiJsam0wbL7AhVIRvEDHW0RCnMQ4dUDCA8&uact=5&oq=Shot+Glass&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECAAQQzIECAAQQzIECAAQQzIKCAAQgAQQhwIQFDIKCAAQgAQQhwIQFDIFCAAQgAQyBAgAEEMyBQgAEIAEMgQIABBDMgUIABCABEoECEEYAEoECEYYAFAAWABgzwFoAHABeACAAW2IAW2SAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp",
                            IsDeleted = false,
                            Name = "Shot Glass"
                        });
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://www.google.com/search?q=Cocktail+Gauguin&hl=en&sxsrf=ALiCzsYZijqseouEFjzKEYTw-66_8uzpsA%3A1668594209334&ei=Ibp0Y5P1E_GTxc8PpdmT8AI&ved=0ahUKEwjTifzovbL7AhXxSfEDHaXsBC4Q4dUDCA8&uact=5&oq=Cocktail+Gauguin&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIECCMQJzIGCAAQFhAeOgoIABBHENYEELADOgcIABCwAxBDOg0IABDkAhDWBBCwAxgBOhIILhDHARDRAxDIAxCwAxBDGAI6FQguEMcBENEDENQCEMgDELADEEMYAjoECAAQQzoKCC4QxwEQ0QMQQzoQCC4QgAQQhwIQxwEQ0QMQFDoFCAAQgAQ6CwguEIAEEMcBENEDOgcILhDUAhBDOggILhCABBDUAjoKCC4Q1AIQgAQQQzoICAAQgAQQyQM6DgguEIAEEMcBEK8BEMsBSgQIQRgASgQIRhgBUNIJWNQmYKUuaARwAXgAgAGNAYgBmQmSAQQwLjEwmAEAoAEBoAECyAERwAEB2gEGCAEQARgJ2gEGCAIQARgI&sclient=gws-wiz-serp",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://www.google.com/search?q=sex+on+the+beach+cocktail&hl=en&sxsrf=ALiCzsbVoUJDMmVhnd712I2_OEi4zn8HKQ%3A1668597389724&ei=jcZ0Y8DaK7CWxc8P7pS3uAs&gs_ssp=eJzj4tLP1TcwKsqotCg2YHRg8JIsTq1QyM9TKMlIVUhKTUzOUEjOT84uSczMAQAB0Q0_&oq=Sex+on+the+Beach+&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAxgAMgcILhCABBBDMgQIABBDMggILhCABBDLATIICAAQgAQQywEyBQgAEIAEMgQIABBDMgQIABBDMgUIABCABDIFCAAQgAQyCggAEIAEEIcCEBRKBAhBGABKBAhGGABQAFi5A2DBIGgAcAF4AIABnQGIAY4CkgEDMC4ymAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://www.google.com/search?q=rhett+butler+cocktail&hl=en&sxsrf=ALiCzsbUCF-euUThMys6PTAiPP0xK4V37w%3A1668595185273&ei=8b10Y6ydEJqRxc8Pzo2z-As&oq=Rhett+Butler&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAxgBMgUIABCABDIKCAAQgAQQhwIQFDIFCAAQgAQyBQguEIAEMgUILhCABDIFCAAQgAQyBQgAEIAEMgUIABCABDILCC4QgAQQxwEQrwEyBQgAEIAESgQIQRgASgQIRhgAUABYAGCfF2gAcAF4AIABqQKIAakCkgEDMi0xmAEAoAECoAEBwAEB&sclient=gws-wiz-serp",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://www.google.com/search?q=Cheshire+Cat+Cocktail&sxsrf=ALiCzsYnvGR_m4i19I70GL1_6ctyPC0kCg%3A1668601527470&ei=t9Z0Y62oHP-Pxc8PoaufkAM&ved=0ahUKEwjt38OK2bL7AhX_R_EDHaHVBzIQ4dUDCA8&uact=5&oq=Cheshire+Cat+Cocktail&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQgAQyBggAEBYQHjIGCAAQFhAeMggIABAWEB4QDzIFCAAQhgMyBQgAEIYDMgUIABCGAzIFCAAQhgMyBQgAEIYDOgoIABBHENYEELADOgcIABCwAxBDOg0IABDkAhDWBBCwAxgBOgwILhDIAxCwAxBDGAI6DwguENQCEMgDELADEEMYAjoECAAQQzoICAAQgAQQywE6BQghEKABSgQIQRgASgQIRhgBUJcBWN8qYN0uaANwAXgAgAGTAYgB8gmSAQQxLjEwmAEAoAEByAETwAEB2gEGCAEQARgJ2gEGCAIQARgI&sclient=gws-wiz-serp",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://www.google.com/search?q=Mexicana+Cocktail&sxsrf=ALiCzsbqImQPN1VjWrRYrgZM5Fnv2oYZ3Q%3A1668601536059&ei=wNZ0Y5WXA9uIxc8P_c2z4AY&ved=0ahUKEwiV98-O2bL7AhVbRPEDHf3mDGwQ4dUDCA8&uact=5&oq=Mexicana+Cocktail&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQgAQyCAgAEIAEEMsBMggIABAWEB4QCjIGCAAQFhAeMgYIABAWEB4yCAgAEBYQHhAKMgYIABAWEB4yCggAEBYQHhAPEAoyCAgAEBYQHhAKMgYIABAWEB46BQguEIAEOgUIIRCgAToKCAAQgAQQhwIQFDoHCAAQgAQQCjoICAAQFhAeEA9KBAhBGABKBAhGGABQAFioNWCrN2gCcAF4AIABigGIAfgJkgEEMC4xMZgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://www.google.com/search?q=Slippery+Nipple+Cocktail&sxsrf=ALiCzsZ4y_0nwTU0wFWwU8KO1G0xUdBsSA%3A1668601931172&ei=S9h0Y9b_CYqqxc8P68qFyA4&ved=0ahUKEwiW0YPL2rL7AhUKVfEDHWtlAekQ4dUDCA8&uact=5&oq=Slippery+Nipple+Cocktail&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIKCC4QgAQQhwIQFDIFCAAQgAQyBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIFCAAQhgMyBQgAEIYDOgYIABAHEB46BQguEIAEOgYIABAIEB5KBAhBGABKBAhGGABQAFgAYP4haABwAXgAgAGjAogBpgOSAQUwLjEuMZgBAKABAqABAcABAQ&sclient=gws-wiz-serp",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://www.google.com/search?q=Bitter+Sweet+Cocktail&sxsrf=ALiCzsYtnnGfQTc9sgKc8-ouqUjsQ4hILg%3A1668602388689&ei=FNp0Y7PUKc-Xxc8P0MOomA4&ved=0ahUKEwizrpil3LL7AhXPS_EDHdAhCuMQ4dUDCA8&uact=5&oq=Bitter+Sweet+Cocktail&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIGCAAQBxAeMgUIABCABDIFCAAQgAQyCAgAEAgQHhAKMgYIABAIEB4yBQgAEIYDMgUIABCGAzoLCAAQBxAeELADEAo6BwgAELADEEM6CAgAEIAEELADOgsIABCABBCwAxDLAToJCAAQCBAeELADOgwILhDIAxCwAxBDGAE6DwguENQCEMgDELADEEMYAUoECEEYAUoECEYYAVDHggtYx4ILYJ6MC2gBcAB4AIABfIgBfJIBAzAuMZgBAKABAqABAcgBEsABAdoBBggBEAEYCA&sclient=gws-wiz-serp",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.TypeOfAlcohol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Alcohols");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Rum"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Brandy"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Gin"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Vodka"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Whiskey"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Wine and Champagne"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Tequila"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Other Alcoholic Beverages and Liqueurs"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Non-alcoholic Cocktails"
                        });
                });

            modelBuilder.Entity("CocktailImage", b =>
                {
                    b.HasOne("WebApp501.Infrastructure.Data.Entities.Cocktail", null)
                        .WithMany()
                        .HasForeignKey("CocktailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp501.Infrastructure.Data.Entities.Image", null)
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.Bartender", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.Cocktail", b =>
                {
                    b.HasOne("WebApp501.Infrastructure.Data.Entities.TypeOfAlcohol", "Alcohol")
                        .WithMany("Cocktails")
                        .HasForeignKey("AlcoholId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebApp501.Infrastructure.Data.Entities.Bartender", "Bartender")
                        .WithMany("Cocktails")
                        .HasForeignKey("BartenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebApp501.Infrastructure.Data.Entities.Glass", "Glass")
                        .WithMany("Cocktails")
                        .HasForeignKey("GlassId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Alcohol");

                    b.Navigation("Bartender");

                    b.Navigation("Glass");
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.Bartender", b =>
                {
                    b.Navigation("Cocktails");
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.Glass", b =>
                {
                    b.Navigation("Cocktails");
                });

            modelBuilder.Entity("WebApp501.Infrastructure.Data.Entities.TypeOfAlcohol", b =>
                {
                    b.Navigation("Cocktails");
                });
#pragma warning restore 612, 618
        }
    }
}
